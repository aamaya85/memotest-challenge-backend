# 
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

# Types
type Memotest {
    id: ID!
    name: String!
    images: [Image!]!
    created_at: DateTime!
    updated_at: DateTime!
}

type GameSession {
    id: ID!
    memotest_id: String!
    retries: Int!
    number_of_pairs: Int!
    state: State!
    created_at: DateTime!
    updated_at: DateTime!
    memotest: Memotest
}

type Image {
    id: ID!
    url: String!
    memotest_id: ID!
}

# Queries
type Query {
    memotest(id: ID @eq): Memotest @find
    game_session(id: ID @eq): GameSession @find
    memotests: [Memotest!]!
}

# Mutations
type Mutation {
    createMemotest(input: CreateMemotestInput! @spread): Memotest!
    addImages(input: AddImagesInput! @spread): [Image!]!
    removeImage(id: ID!): Image @delete
    deleteMemotest(id: ID!): Memotest @delete
    createGameSession(input: CreateGameSessionInput! @spread): GameSession @create
    endGameSession(id: ID!): GameSession!
}

# Inputs
input CreateGameSessionInput{
    memotest_id: ID!
    retries: Int!
    number_of_pairs: Int!
    state: State!
}

input CreateMemotestInput {
    name: String!
    images: [CreateImageInput]
}

input CreateImageInput {
    url: String!
}

input AddImagesInput {
    images: [CreateImageInput!]!
    memotest_id: ID!
    
}

# Enums
enum State {
    STARTED
    COMPLETED
}
